rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ---------------- USERS ----------------
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;

      // Allow profile updates but NOT billing fields
      allow update: if request.auth != null 
                    && request.auth.uid == userId
                    && !(
                      "plan" in request.resource.data
                      || "addons" in request.resource.data
                      || "subscriptionStatus" in request.resource.data
                      || "currentPeriodEnd" in request.resource.data
                    )
                    // Credits rule: allow decrement only
                    && (
                      !("credits" in request.resource.data)
                      || (
                        "credits" in resource.data
                        && "credits" in request.resource.data
                        && request.resource.data.credits <= resource.data.credits
                      )
                    );

      // Full writes allowed only by server/webhook (admin token)
      allow write: if request.auth.token.admin == true;
    }

    // ---------------- AUDIT LOGS ----------------
    match /auditLogs/{logId} {
      allow read: if request.auth != null;
      allow write: if request.auth.token.admin == true;
    }

    // ---------------- ORGS ----------------
    match /orgs/{orgId} {
      allow read: if request.auth != null;
      allow write: if request.auth.token.admin == true;
    }

    // ---------------- INVITES ----------------
    match /invites/{inviteId} {
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'owner', 'manager'];
    }

    // ---------------- APPLICATIONS ----------------
    match /applications/{appId} {
      allow create: if true; // applicants can submit
      allow read, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'owner', 'manager'];
    }
  }
}