rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ---------------------------
    // USERS
    // ---------------------------
    match /users/{userId} {
      allow read: if request.auth != null
        && (request.auth.uid == userId || request.auth.token.role in ["SUPER_ADMIN", "ADMIN"]);
      allow write: if request.auth.uid == userId;
    }

    // ---------------------------
    // TEAMS & MEMBERS
    // ---------------------------
    match /teams/{teamId} {
      allow read: if request.auth.token.role in ["SUPER_ADMIN", "ADMIN"];
      allow write: if request.auth.token.role == "SUPER_ADMIN";
    }

    match /teams/{teamId}/members/{memberId} {
      allow read: if request.auth != null
        && (request.auth.token.role in ["SUPER_ADMIN", "ADMIN"] || request.auth.uid == memberId);
      allow write: if request.auth.token.role in ["SUPER_ADMIN", "ADMIN"];
      allow delete: if request.auth.token.role == "SUPER_ADMIN";
    }

    // ---------------------------
    // INVITES
    // ---------------------------
    match /invites/{inviteId} {
      allow create: if request.auth.token.role in ["SUPER_ADMIN", "ADMIN"];
      allow read: if request.auth != null
        && (request.auth.token.role in ["SUPER_ADMIN", "ADMIN"] 
            || resource.data.email == request.auth.token.email);
      allow update: if request.auth.token.role in ["SUPER_ADMIN", "ADMIN"];
      allow delete: if request.auth.token.role == "SUPER_ADMIN";
    }

    // ---------------------------
    // DISPUTES
    // ---------------------------
    match /disputes/{disputeId} {
      allow read: if request.auth.token.role in ["SUPER_ADMIN", "ADMIN", "SUPPORT", "VIEWER"];
      allow write: if request.auth.token.role in ["SUPER_ADMIN", "ADMIN", "SUPPORT"];
    }

    // ---------------------------
    // FRAUD ALERTS (renters)
    // ---------------------------
    match /renters/{renterId} {
      allow read: if request.auth.token.role in ["SUPER_ADMIN", "ADMIN", "SUPPORT", "VIEWER"];
      allow update: if request.auth.token.role in ["SUPER_ADMIN", "ADMIN"];
      allow delete: if request.auth.token.role == "SUPER_ADMIN";
    }

    // ---------------------------
    // BLOG POSTS
    // ---------------------------
    match /blogs/{blogId} {
      allow read: if true; // public blog visibility
      allow create: if request.auth.token.role in ["SUPER_ADMIN", "ADMIN", "EDITOR"];
      allow update: if request.auth.token.role in ["SUPER_ADMIN", "ADMIN", "EDITOR"];
      allow delete: if request.auth.token.role in ["SUPER_ADMIN", "ADMIN"];
    }

    // ---------------------------
    // AUDIT LOGS
    // ---------------------------
    match /auditLogs/{logId} {
      allow read: if request.auth.token.role in ["SUPER_ADMIN", "ADMIN"];
      allow create: if request.auth.token.role == "SYSTEM"; // cloud functions only
      allow delete: if false;
    }

    // ---------------------------
    // ALERTS
    // ---------------------------
    match /alerts/{alertId} {
      allow read: if request.auth.token.role in ["SUPER_ADMIN", "ADMIN"];
      allow create: if request.auth.token.role == "SYSTEM"; // cloud functions
      allow update: if request.auth.token.role in ["SUPER_ADMIN", "ADMIN"]; // acknowledge
      allow delete: if false;
    }

    // ---------------------------
    // CHATS (Support)
    // ---------------------------
    match /chats/{chatId} {
      allow read: if request.auth.token.role in ["SUPER_ADMIN", "ADMIN", "SUPPORT"];
      allow create: if request.auth != null; // renters/customers can start chats
      allow update: if request.auth.token.role in ["SUPER_ADMIN", "ADMIN", "SUPPORT"];
      allow delete: if request.auth.token.role == "SUPER_ADMIN";
    }

    match /chats/{chatId}/messages/{msgId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow delete: if request.auth.token.role in ["SUPER_ADMIN", "ADMIN"];
    }
  }
}