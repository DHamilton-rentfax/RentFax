rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // RENTERS can only read/update their own doc
    match /renters/{uid} {
      allow read, update: if request.auth.uid == uid;
      allow create: if request.auth.uid != null;
    }

    // DISPUTES can be created by auth'd users. Can only be read/updated by creator or admin.
    match /disputes/{id} {
      allow create: if request.auth != null;
      allow read, update: if request.auth.uid == resource.data.renterId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // VERIFICATION TOKENS are admin-only
    match /verificationTokens/{id} {
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // NOTIFICATIONS can only be accessed by the assigned user
     match /notifications/{id} {
      allow read, update: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null; // Server/functions will create these
    }

    // USERS can read their own doc. Admins can read/write any.
    match /users/{uid} {
      allow read, update: if request.auth.uid == uid;
      allow create; // Allow user signup
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // SYSTEM SETTINGS are admin-only
    match /systemSettings/{docId} {
        allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // SUBSCRIPTIONS can be created by server, read by user.
    match /subscriptions/{id} {
        allow read: if request.auth.uid == resource.data.userId;
        allow create, write: if false; // Only server can write
    }
  }
}
