
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSuperAdmin() {
      return request.auth.token.role == 'super_admin';
    }

    function isAdmin(companyId) {
      return request.auth.token.role == 'admin' && request.auth.token.companyId == companyId;
    }
    
    function isOwner(userId) {
        return request.auth.uid == userId;
    }
    
    function isProPlan() {
        return request.auth.token.plan == 'pro' || request.auth.token.plan == 'enterprise';
    }

    // Admins can read/write their own company data
    match /companies/{companyId} {
      allow read, write: if isAdmin(companyId) || isSuperAdmin();
    }
    
    // Users can read/write their own data
    match /users/{userId} {
        allow read, write: if isOwner(userId) || isSuperAdmin();
    }
    
    // Invites can be read by anyone, but only created/updated by admins
    match /invites/{inviteId} {
        allow read: if request.auth != null;
        allow create, update: if isAdmin(request.resource.data.companyId) || isSuperAdmin();
    }
    
    // Only Pro plans can create disputes
    match /disputes/{id} {
      allow create: if request.auth != null && isProPlan();
      allow read, update: if request.auth != null && (isAdmin(resource.data.companyId) || isSuperAdmin());
    }

    // Only admins/superadmins can manage systemSettings
    match /systemSettings/global {
      allow read, write: if isSuperAdmin();
    }

    // Public rules are readable by anyone
    match /companyRules/{companyId} {
        allow read: if true;
        allow write: if isAdmin(companyId) || isSuperAdmin();
    }
    
    // Logging collections are write-only for the application
    match /systemLogs/{logId} {
        allow read: if isSuperAdmin();
        allow write: if true; // Typically written by backend services
    }
    
     match /auditLogs/{logId} {
        allow read: if isSuperAdmin();
        allow write: if true;
    }
    
     match /webhook_test/{logId} {
        allow read, write: if true;
    }
    
     match /demoAnalytics/{logId} {
        allow read, write: if true;
    }

     // Subscription data is mostly managed by webhooks
    match /subscriptions/{subId} {
      allow read: if isSuperAdmin();
      allow write: if false; // Only backend/webhooks can write
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
