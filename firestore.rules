rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Require auth for everything
    match /{document=**} {
      allow read, write: if request.auth != null;
    }

    // Companies (orgs)
    match /orgs/{orgId} {
      allow read, write: if isOrgMember(orgId);
    }

    // Renter data
    match /orgs/{orgId}/renters/{renterId} {
      allow read: if isOrgMember(orgId);
      allow create, update, delete: if isOrgAdmin(orgId);
    }

    // Renter documents
    match /orgs/{orgId}/renters/{renterId}/docs/{docId} {
        allow read, write: if isOrgMember(orgId);
    }

    // Audit logs â€“ read-only to org admins
    match /orgs/{orgId}/audit/{logId} {
      allow read: if isOrgAdmin(orgId);
      allow write: if request.auth != null && request.auth.uid == resource.data.actorUid;
    }

    // Document metadata
    match /orgs/{orgId}/docs/{docId} {
      allow read, write: if isOrgMember(orgId);
    }
  }
}

function isOrgMember(orgId) {
  return exists(/databases/$(database)/documents/orgs/$(orgId)/members/$(request.auth.uid));
}

function isOrgAdmin(orgId) {
  return get(/databases/$(database)/documents/orgs/$(orgId)/members/$(request.auth.uid)).data.role in ['OWNER','ADMIN'];
}