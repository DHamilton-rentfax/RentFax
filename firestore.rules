rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- Renters can only view/update their own profile ---
    match /renters/{renterId} {
      allow read, update: if request.auth != null && request.auth.uid == renterId;
      allow create: if true;
    }

    // --- Incidents ---
    match /incidents/{incidentId} {
      allow read: if resource.data.renterId == request.auth.uid || hasAdminRole();
      allow update, delete: if hasAdminRole();
      allow create: if hasAdminRole();
    }

    // --- Resolutions (Renter Resolution Portal) ---
    match /resolutions/{resolutionId} {
      allow read: if resource.data.renterId == request.auth.uid || hasAdminRole();
      allow create: if request.auth.uid == request.resource.data.renterId;
      allow update: if hasAdminRole();
    }

    // --- Helper Function ---
    function hasAdminRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['ADMIN', 'SUPER_ADMIN'];
    }

    // --- Existing Rules ---
    match /orgs/{orgId} {
      allow read, write: if request.auth.uid != null && request.auth.token.orgId == orgId;

      match /renters/{renterId} {
        allow read: if request.auth.uid != null && request.auth.token.orgId == orgId;
        allow write: if request.auth.uid != null && request.auth.token.orgId == orgId;
      }

      match /logs/{logId} {
        allow read: if request.auth.uid != null && request.auth.token.orgId == orgId;
        allow create: if request.auth.uid != null;
        allow update, delete: if false; // Immutable
      }
    }
  }
}
