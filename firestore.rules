rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read: if request.auth.uid == userId;
      allow write: if request.auth.uid == userId;

      // Allow users to read/write their own notifications
      match /notifications/{notificationId} {
        allow read, write: if request.auth.uid == userId;
      }
    }

    match /companies/{companyId} {
      allow read: if request.auth.token.companyId == companyId;
      // Allow only admins to update company details
      allow write: if request.auth.token.role in ['admin', 'super_admin'];
    }

    match /blogs/{blogId} {
      // Publicly readable
      allow read: if true;
      // Writable only by admins and content managers
      allow write: if request.auth.token.role in ['super_admin', 'admin', 'content_manager'];
    }
    
    match /applications/{appId} {
        // Allow anyone to submit, but only admins to read
        allow create: if true;
        allow read, write: if request.auth.token.role in ['super_admin', 'admin'];
    }

    match /renters/{renterId} {
      allow read, write: if request.auth.token.companyId == resource.data.companyId;

      match /fraud/summary {
         allow read, write: if request.auth.token.companyId == get(/databases/$(database)/documents/renters/$(renterId)).data.companyId;
      }
    }
    
    match /incidents/{incidentId} {
       allow read, write: if request.auth.token.companyId == resource.data.companyId;
    }

    match /disputes/{disputeId} {
      allow read, write: if request.auth.token.companyId == resource.data.companyId;
    }

    match /invites/{inviteId} {
        allow read, write: if request.auth.token.companyId == resource.data.companyId;
    }

    match /companyRules/{companyId} {
      allow read: if true;
      allow write: if request.auth.token.companyId == companyId && request.auth.token.role in ['admin', 'super_admin'];
    }

    match /auditLogs/{logId} {
        allow read: if request.auth.token.role in ['super_admin', 'admin'];
        allow create: if request.auth != null; // Allow any authenticated user to trigger an audit log event
        allow update, delete: if false; // Immutable
    }
  }
}
