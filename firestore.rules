rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{id} {
      allow read: if request.auth != null && (request.auth.uid == id || request.auth.token.role in ['admin','superadmin']);
      allow write: if request.auth.uid == id;
    }

    match /disputes/{id} {
      allow create: if request.auth != null && request.auth.token.plan in ['pro','enterprise'];
      allow read, update: if request.auth != null && (
        request.auth.uid == resource.data.renterId ||
        request.auth.token.role in ['admin','superadmin']
      );
    }
    
    match /chatHistory/{id} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.uid;
    }

    match /notifications/{id} {
      allow read, update: if request.auth.uid == resource.data.userId;
      allow create: if request.auth != null;
    }

    match /systemLogs/{id} {
      allow read: if request.auth.token.role in ['admin','superadmin'];
    }
    
    match /alerts/{id} {
      allow read: if request.auth != null && request.auth.token.role in ['admin','superadmin'];
    }
    
    match /verificationTokens/{id} {
      allow read, write: if request.auth != null && request.auth.token.role == 'admin';
    }

    // Default deny all other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}