
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    function isSuperAdmin() {
      return request.auth.token.role == 'super_admin';
    }

    function isAdmin() {
      return request.auth.token.role == 'admin';
    }

    function isEditor() {
      return request.auth.token.role == 'editor';
    }

    function isContentManager() {
        return request.auth.token.role == 'content_manager';
    }
    
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;

      match /notifications/{notificationId} {
        allow create, read, update, delete: if request.auth.uid == userId;
      }
    }

    match /blogs/{blogId} {
      allow read: if true;
      allow write, update, delete: if request.auth.token.role in ['super_admin', 'admin', 'content_manager'];
    }

    match /analytics/{docId} {
      allow read: if request.auth.token.role in ['super_admin', 'admin', 'content_manager'];
      allow write: if isSuperAdmin() || isAdmin();
    }

    match /disputes/{disputeId} {
      allow read, write: if isSuperAdmin() || isAdmin();
    }

    match /incidents/{incidentId} {
      allow read, write: if isSuperAdmin() || isAdmin();
    }

    match /auditLogs/{logId} {
      allow read: if isSuperAdmin() || isAdmin();
      allow write: if false;
    }
    
    match /companies/{companyId} {
        allow read, update: if isSuperAdmin() || (isAdmin() && request.auth.token.companyId == companyId);
    }
    
    match /companyRules/{companyId} {
        allow read: if true;
        allow write: if isSuperAdmin() || (isAdmin() && request.auth.token.companyId == companyId);
    }

    match /invites/{inviteId} {
        allow read, write: if isSuperAdmin() || isAdmin();
    }
    
    match /renters/{renterId} {
        allow read, write: if isSuperAdmin() || isAdmin() || isEditor();
    }
    
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
